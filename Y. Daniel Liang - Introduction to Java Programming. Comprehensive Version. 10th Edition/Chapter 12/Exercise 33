package pe_12_33;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Scanner;

class SearchWeb {
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
		System.out.print("Enter a word: ");
		String word = input.next();
		String url = "http://google.com";
		crawler(url, word); // Traverse the Web from the a starting url
		input.close();
		}
	public static void crawler(String startingURL, String desiredWord) {
		ArrayList<String> listOfPendingURLs = new ArrayList<>();
		ArrayList<String> listOfTraversedURLs = new ArrayList<>();
		boolean wordFound = false;
		String urlString ="";
		listOfPendingURLs.add(startingURL);
		while (!listOfPendingURLs.isEmpty() && !wordFound) {
			urlString = listOfPendingURLs.remove(0);
			wordFound = searchWord(urlString, desiredWord);
			if (!listOfTraversedURLs.contains(urlString)&&!wordFound) {
				listOfTraversedURLs.add(urlString);
				System.out.println("Crawl " + urlString);
				for (String s: getSubURLs(urlString)) {
					if (!listOfTraversedURLs.contains(s))
						listOfPendingURLs.add(s);
					}
				}
			}
		if(wordFound)
			System.out.println("Word found, URL that contains the word: " + urlString );
		else
			System.out.println("Sorry, no such word found");
		}
	public static ArrayList<String> getSubURLs(String urlString) {
		ArrayList<String> list = new ArrayList<>();
		try {
			java.net.URL url = new java.net.URL(urlString);
			Scanner input = new Scanner(url.openStream());
			int current = 0;
			while (input.hasNext()) {
				String line = input.nextLine();
				current = line.indexOf("http:", current);
				while (current > 0) {
					int endIndex = line.indexOf("\"", current);
					if (endIndex > 0) { // Ensure that a correct URL is found
						list.add(line.substring(current, endIndex));
						current = line.indexOf("http:", endIndex);
						}
					else
						current = -1;
					}
				}
			}
		catch (Exception ex) {
			System.out.println("Error: " + ex.getMessage());
			}
		return list;
	}
	
	static boolean searchWord(String adress, String desiredWord) {
		boolean wordFound = false;
		try(Scanner input = new Scanner(new URL(adress).openStream());){
			while(input.hasNext()&&!wordFound) {
				String strLine = input.nextLine();
				wordFound = searchOnLine(strLine, desiredWord);
			}
		}
		catch (MalformedURLException ex) {
			ex.printStackTrace();
		}
		catch (java.io.IOException ex) {
			System.out.println("I/O Errors: no such file");			
		}
		return wordFound;
	}
	static boolean searchOnLine(String strLine, String desiredWord) {
		boolean wordFound = false;
		try(Scanner line = new Scanner(strLine);){
			while(line.hasNext()&&!wordFound) {
				String word = line.next();
				wordFound = word.equalsIgnoreCase(desiredWord);			
			}
		}
		catch(Exception ex) {
			System.out.println("We have problem in search on line, " + ex.getMessage());
		}
		return wordFound;
	}		
}
