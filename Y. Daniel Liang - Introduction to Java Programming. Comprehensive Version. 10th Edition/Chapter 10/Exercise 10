package pe_10_10;
public class Queue {
	private int [] elements;
	private int size = 0;
	public static final int DEFAULT_CAPACITY = 8;
	
	Queue()	{
		this.elements = new int [DEFAULT_CAPACITY];
	}
	
	public void enqueue(int v) {
		if (size >= elements.length) {
			int[] temp = new int[elements.length * 2];
			System.arraycopy(elements, 0, temp, 0, elements.length);
			elements = temp;
			}
		elements[size++] = v;
	}
	public int dequeue(){
		int element = -777;
		if(!empty()) {
			element = elements[0];
			System.arraycopy(elements, 1, elements, 0, --size);			
		}
		else
			System.out.println("\nThe queue is empty ");
		return element;
		
		}
	public boolean empty() {
		return size ==0;
	}
	
	public int getSize() {
		return size;
		}
}

package pe_10_10;
public class TestQueue {
	public static void main (String []args)
	{
		Queue test1 = new Queue();
		for(int i = 1; i <= 20; i++)
			test1.enqueue(i);
		System.out.println("Size is " + test1.getSize());
		for(int i = test1.getSize(); i >= 0; i--)
		{
			System.out.println("Remove element " + test1.dequeue());
			System.out.println("Size is " + test1.getSize());			
		}		
	}
}
