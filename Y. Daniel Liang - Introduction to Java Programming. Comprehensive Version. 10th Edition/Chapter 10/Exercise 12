package pe_10_12;
import pe_10_04.MyPoint;

public class Triangle2D {
	private MyPoint p1;
	private MyPoint p2;
	private MyPoint p3;
	
	Triangle2D(){
		this(new MyPoint(0,0),new MyPoint (1,1), new MyPoint(2,5));
	}
	
	Triangle2D(MyPoint p1, MyPoint p2, MyPoint p3) {
		this.p1 = p1;
		this.p2 = p2;
		this.p3 = p3;
	}
	
	public void setPointP1(MyPoint p1){
		this.p1 = p1;}
	
	public MyPoint getPointP1() {
		return p1;	}
	
	public void setPointP2(MyPoint p2) {
		this.p2 = p2;}
	
	public MyPoint getPointP2() {
		return p2;}
	
	public void setPointP3(MyPoint p3) {
		this.p3 = p3;}
	
	public MyPoint getPointP3() {
		return p3;}
	
	public double getArea() {
		double [] sides = new double [3];
		sides[0] = MyPoint.distance(p1, p2);
		sides[1] = MyPoint.distance(p1, p3);
		sides[2] = MyPoint.distance(p2, p3);
		double s = (sides[0]+sides[1]+sides[2])/2;
		double area = Math.sqrt((s*(s - sides[0])*(s - sides[1])*(s - sides[2])));
		return area;
	}
	
	public double getPerimeter() {
		double [] sides = new double [3];
		sides[0] = MyPoint.distance(p1, p2);
		sides[1] = MyPoint.distance(p1, p3);
		sides[2] = MyPoint.distance(p2, p3);
		double s = (sides[0]+sides[1]+sides[2]);
		return s;
	}
	
	public boolean contains(MyPoint p) {
		double a = (p1.getX() - p.getX()) *(p2.getY()-p1.getY()) - (p2.getX()-p1.getX()) * (p1.getY() - p.getY());
		double b = (p2.getX() - p.getX()) *(p3.getY() - p2.getY()) -(p3.getX() - p2.getX()) * (p2.getY() - p.getY());
		double c = (p3.getX() - p.getX()) * (p1.getY() - p3.getY()) - (p1.getX() - p3.getX()) *(p3.getY()- p.getY());
		return  a>=0&&b>=0&&c>=0 || a<=0&&b<=0&&c<=0;		
	}
}
