package pe_10_08;
class Tax {
	private int filingStatus;
	private int[][] brackets; 
	private double[] rates;
	private double taxableIncome;
	public static final int SINGLE_FILER = 0;
	public static final int MARRIED_JOINTLY_OR_QUALIFYING_WIDOWER = 1;
    public static final int MARRIED_SEPARATELY = 2;
    public static final int HEAD_OF_HOUSEHOLD = 3;
    static final int[][] DEFAULT_BRACKETS = {
			{0, 8350, 33950, 82250, 171550, 372950}, // Single filer
			{0, 16700, 67900, 137050, 208850, 372950}, // Married jointly -or qualifying widow(er)
			{0, 8350, 33950, 68525, 104425, 186475}, // Married separately
			{0, 11950, 45500, 117450, 190200, 372950} // Head of household
			};  
    static final double[] DEFAULT_RATES = {0.10, 0.15, 0.25, 0.28, 0.33, 0.35};
    
	
	Tax(){	
		this(0, DEFAULT_BRACKETS,DEFAULT_RATES,0);
	}
	
	Tax(int filingStatus, double taxableIncome){
		this(filingStatus, DEFAULT_BRACKETS,DEFAULT_RATES,taxableIncome);		
	}
	
	Tax(int filingStatus, int [][] brackets, double [] rates, double taxableIncome)
	{
		this.filingStatus = filingStatus;
		this.brackets = brackets;
		this.rates = rates;
		this.taxableIncome = taxableIncome;		
	}
	
	int getFilingStatus() {
		return filingStatus;}
	
	int [][] brackets(){
		return brackets;}		
	
	double [] getRates() {
		return rates;}
	
	double getTaxableIncome() {
		return taxableIncome;}	
	
	void setFilingStatus(int filingStatus ) {
		this.filingStatus = filingStatus;
	}
	
	void setBrackets(int [][] brackets ) {
		this.brackets = brackets;
	}
	
	void setRates(double [] rates) {
		this.rates = rates;
	}	
	
	void setTaxableIncome(double taxableIncome) {
		this.taxableIncome = taxableIncome;
	}	
	
	double getTax()
	{
		double tax = 0;
		int column = 0;	
		do
		{
			column++;
			if (taxableIncome > brackets[filingStatus][column] )
				tax = tax+(brackets[filingStatus][column]- brackets[filingStatus][column-1]) * rates[column-1];
			else
				tax = (taxableIncome - brackets[filingStatus][column-1]) * rates[column-1] + tax;
			
		}while (taxableIncome > brackets[filingStatus][column] && column < brackets[filingStatus].length-1 );
		if(taxableIncome > brackets[filingStatus][5])
			tax = (taxableIncome - brackets[filingStatus][5]) * rates[6] + tax;
		
		return tax;
	}
}	

package pe_10_08;
public class TestTax {
	public static void main(String []args)
	{
		Tax [] list = new Tax [4];
		for(int i =0; i < list.length; i++)
			list[i] = new Tax(i, 50000);
		printTable(list, "2009");
		int[][] brackets2001 = {
                {0, 27050, 65550, 136750, 297350, 297350},   // Single filer
                {0, 45200, 109250, 166500, 297350, 297350},  // Married jointly
                {0, 22600, 54625, 83250, 148675, 148675},   // Married separately
                {0, 36250, 93650, 151650, 297350, 297350}  // Head of household
        };
        double[] rates2001 =
                {0.15, 0.275, 0.305, 0.355, 0.391, 0.391};
        for(int i =0; i < list.length; i++)
        {
        	list[i].setBrackets(brackets2001);
        	list[i].setRates(rates2001);
        }        
        printTable(list, "2001");	
	}
	
	static void printTable(Tax [] client, String year)
	{
		System.out.println("\n"+year+"_______________________________________________________________________________________");		
		System.out.println("Taxable Income	Single filers	Married filing jointly	 Married filing	  Head of houeshold");
		System.out.println("				or qualiying widow(er)	 separately");
		System.out.println("-------------------------------------------------------------------------------------------");
		for(int i = 50000; i <= 60000; i+=1000)
		{
			for(int j= 0; j<client.length; j++)
				client[j].setTaxableIncome(i);
			System.out.printf("$%-14.2f $%-14.2f %-24.2f %-16.2f %-8.2f \n", client[0].getTaxableIncome(), client[0].getTax(), 
					client[1].getTax(),	client[2].getTax(), client[3].getTax());			
			}		
	}
}
