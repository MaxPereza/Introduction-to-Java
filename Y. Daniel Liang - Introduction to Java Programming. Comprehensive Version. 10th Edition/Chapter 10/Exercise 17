package pe_10_17;
import java.math.BigInteger;
public class BigIntegerSqrt {
	public static void main(String [] args)
	{
		BigInteger number = BigInteger.valueOf(Long.MAX_VALUE);
		int count =0;
		BigInteger num = new BigInteger("0");
		while(count<10)
		{ 
			BigInteger sqrt =  sqrt(number);
			
			if(!sqrt.multiply(sqrt).equals(num)) {
				//System.out.println("sqrt numb " + sqrt.multiply(sqrt) + " and num " + num);
				num = sqrt.multiply(sqrt);
				System.out.println("Square number is " + num);
				count++;
			}
			number = number.add(sqrt);			
		}		
	}
	public static BigInteger sqrt(BigInteger x) {
	    BigInteger div = BigInteger.ZERO.setBit(x.bitLength()/2);
	    BigInteger div2 = div;
	    // Loop until we hit the same value twice in a row, or wind
	    // up alternating.
	    for(;;) {
	        BigInteger y = div.add(x.divide(div)).shiftRight(1);
	        if (y.equals(div) || y.equals(div2))
	            return y;
	        div2 = div;
	        div = y;
	    }
	}
}
