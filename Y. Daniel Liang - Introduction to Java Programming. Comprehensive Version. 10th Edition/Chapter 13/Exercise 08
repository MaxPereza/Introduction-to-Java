package pe_13_08;

import java.util.ArrayList;

public class RevisetheMyStack implements Cloneable{
	private ArrayList<Object> list = new ArrayList<>();
	
	public boolean isEmpty() {
	return list.isEmpty();
	}
	
	public int getSize() {
	return list.size();
	}
	
	public Object peek() {
	return list.get(getSize() - 1);
	}
	
	public Object pop() {
	Object o = list.get(getSize() - 1);
	list.remove(getSize() - 1);
	return o;
	}
	
	public void push(Object o) {
	list.add(o);
	}
	
	public Object clone()  {
		 try {
			    RevisetheMyStack clone = (RevisetheMyStack)super.clone();
	            clone.list = (ArrayList<Object>)list.clone();
	            return clone;
	        }
	        catch (CloneNotSupportedException ex) {
	            return null;
	        }
	}
	
	@Override
	public String toString() {
	return "stack: " + list.toString();
	}
}

package pe_13_08;

class TestMyStack {
	public static void main(String []args) {
		RevisetheMyStack list = new RevisetheMyStack();
		for(int i = 0; i < 10; i++) {
			list.push((int)(Math.random()*100));
		}
		System.out.println(list.toString());
		RevisetheMyStack list2 = (RevisetheMyStack)(list.clone());
		list2.push("Ho ho");
		System.out.println(list2.toString());
	}
}
