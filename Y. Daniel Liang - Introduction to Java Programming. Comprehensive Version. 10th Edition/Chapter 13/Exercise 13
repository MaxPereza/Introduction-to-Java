package pe_13_13;

public class Course implements Cloneable {
	private String courseName;
	private String[] students = new String[100];
	private int numberOfStudents;
	
	public Course(String courseName) {
		this.courseName = courseName;
		}
	public void addStudent(String student) {
		students[numberOfStudents] = student;
		numberOfStudents++;
		}
	public String[] getStudents() {
		return students;
		}
	public int getNumberOfStudents() {
		return numberOfStudents;
		}
	
	public String getCourseName() {
		return courseName;
		}
	
	public void dropStudent(String student) {
		for(int i = 0; i< numberOfStudents; i++)		
			if(student.equals(students[i]))
				System.arraycopy(students, i+1, students, i, numberOfStudents--);
	}
	@Override
	public Course clone()  {
		 try {
			    Course clone = (Course)super.clone();
	            clone.students = (String [])students.clone();
	            return clone;
	        }
	        catch (CloneNotSupportedException ex) {
	            return null;
	        }
	}	
}

package pe_13_13;
public class TestCource {
	public static void main(String []args) {
		Course course1 = new Course("Corce1");
		course1.addStudent("Jhon");
		course1.addStudent("Valeri");
		Course course2 = course1.clone();
		for(int i =0; i < course1.getNumberOfStudents(); i++)
			System.out.print(course1.getStudents()[i] + ", ");
		course1.dropStudent("Jhon");
		System.out.println("\nAfter deletion");
		for(int i =0; i < course1.getNumberOfStudents(); i++)
			System.out.print(course1.getStudents()[i] + ", ");
		System.out.println("\nClone course2:");
		for(int i =0; i < course2.getNumberOfStudents(); i++)
			System.out.print(course2.getStudents()[i] + ", ");
	}
}
