package pe_13_07;

public interface Colorable {
	void howToColor();
}

package pe_13_07;
import pe_13_05.GeometricObject;

public class Square extends GeometricObject implements Colorable{
	private double side = 0;
	
	Square()
	{}
	
	Square (double side){
		setSide(side);
	}
	
	public void setSide(double side) {
		this.side = side;
	}
	
	public double getSide() {
		return side;
	}
	
	@Override
	public double getArea()	{
		return side * side;
	}
	
	@Override
	public double getPerimeter()	{
		return 2*(side * side);
	}
	
	
	public void howToColor()	{
		System.out.println("Color all four sides");
	}
}

package pe_13_07;

import pe_13_05.GeometricObject;
import pe_13_06.Rectangle;

class TestColorable {
	public static void main(String []args) {
		//creating an array of 5 elements
		GeometricObject [] list = new  GeometricObject [5];
		//filling the array
		for(int i = 0; i < 5;i++) {
			if((int)(Math.random()*2) == 1)
				list[i] = new Square(i);
			else
				list[i] = new Rectangle(i, i+1);
		}
		// array trace
		for(GeometricObject obj: list) {
			System.out.println(obj.getClass() +" "+ obj.getArea());
			if(obj instanceof Square ) 				
				((Square) obj).howToColor();
		}
	}
}
