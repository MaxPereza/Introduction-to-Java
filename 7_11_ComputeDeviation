/*(Statistics: compute deviation) Programming Exercise 5.45 computes the standard
deviation of numbers. This exercise uses a different but equivalent formula to
compute the standard deviation of n numbers.
To compute the standard deviation with this formula, you have to store the individual
numbers using an array, so that they can be used after the mean is obtained.
Your program should contain the following methods:
/** Compute the deviation of double values */
public static double deviation(double[] x)
/** Compute the mean of an array of double values */
public static double mean(double[] x)
Write a test program that prompts the user to enter ten numbers and displays the
mean and standard deviation, as shown in the following sample run:

Enter ten numbers: 1.9 2.5 3.7 2 1 6 3 4 5 2
The mean is 3.11
The standard deviation is 1.55738
*/

import java.util.Scanner;
public class ComputeDeviation_7_11 {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        double [] listDouble = new double [10];
        System.out.print("Enter ten numbers: ");
        for(int i = 0; i <listDouble.length;i++)
            listDouble[i] = input.nextDouble();
        
        double mean = mean(listDouble);
        for(int i = 0; i<listDouble.length; i++){
            listDouble[i]= Math.pow((listDouble[i] - mean), 2);            
        }        
    
        double standardDeviation = deviation(listDouble);
        System.out.printf("The mean is %.2f%n", mean);
        System.out.printf("The standard deviation is %.5f%n", standardDeviation);
    }
    
    public static double mean(double [] array)
    {
        double sum = 0;
        for (int i = 0; i < array.length; i++) {
            double num = array[i];
            sum += num;            
        }
        
        double mean = sum / array.length;
        return mean;   
    }
    
    public static double deviation (double [] array)
    {
        double sumAffterMean = 0;
        for (int i = 0; i < array.length; i++) {
            sumAffterMean += array[i];   
        }
        
        double deviation = Math.sqrt(sumAffterMean / (array.length-1));
        return deviation;
    }
}
